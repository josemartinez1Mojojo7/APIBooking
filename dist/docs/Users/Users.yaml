paths:
  /api/users/:
    get:
      security:
        - Auth: []
      summary: Obtiene todos los Users.
      tags:
        - Users
      responses:
        "200":
          description: Los users se obtuvieron exitosamente de la BD.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "401":
          description: No Autorizado para Obtener los Users.
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la BD).
    post:
      security:
        - Auth: []
      summary: Guardar un User.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/saveUser'
      responses:
        "201":
          description: User creado exitosamente.
        "401":
          description: No Autorizado para Guardar el User.
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la BD).  
  /api/users/{userId}:
    get:
      security:
        - Auth: []
      summary: Obtiene un determinado User.
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: id de User que se requiere
        schema:
          $type: number
      responses:
        "200":
          description: El User se obtuvo exitosamente de la BD.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/User'
        "401":
          description: No Autorizado para Obtener el User.
        "404":
          description: El User no fue encontrado.
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la BD).
    put:
      security:
        - Auth: []
      summary: Actualiza un determinado User
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: id de User que se requiere
        schema:
          $type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "204":
          description: El User se actualizo exitosamente en la BD.
        "401":
          description: No Autorizado para Actualizar el User.
        "404":
          description: El User no fue encontrado.
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la BD).
    delete:
      security:
        - Auth: []
      summary: Eliminar un determinado User
      tags:
        - Users
      parameters:
      - name: userId
        in: path
        required: true
        description: id de User que se requiere
        schema:
          $type: number
      responses:
        "204":
          description: El User se elimino exitosamente de la BD.
        "401":
          description: No Autorizado para Eliminar el User.
        "404":
          description: El User no fue encontrado.
        "500":
          description: Error interno del servidor (query incorrecta o falla de conexion con la BD).
components:
  schemas:
    User:
      type: object
      properties:
        id: 
          type: number
          description: Id autogenerado por la BD.
        username:
          type: string
        password:
          type: string
        active: 
          type: boolean
        createdAt: 
          type: Date
        updatedAt: 
          type: Date
      example:
        id: 2
        username: jhon
        password: jhon123
        active: true
        createdAt: '2023-07-13'
        updatedAt: '2023-07-13'
  requestBodies:
    saveUser:
      type: object
      properties:  
        username:
          type: string
          description: Nombre de usuario.
        passowrd:
          type: string
          description: Contraseña de usuario.  
      example:
        username: jhon
        password: jhon123
    updateUser:
      type: object
      properties:  
        username:
          type: string
          description: Nombre de usuario.
        passowrd:
          type: string
          description: Contraseña de usuario.  
        active:
          type: boolean
          description: Dar de Alta o Dar de Baja de usuario.
      example:
        username: jhon
        password: jhon123
        active: false
  securitySchemes:
    Auth:            
      type: http
      scheme: bearer
      bearerFormat: JWT    
